library(dplyr)
library(ggplot2)
library(minpack.lm)
library(mlbench)
data("PimaIndiansDiabetes2")
head(PimaIndiansDiabetes2)
# Conversión de variables
heart_df$Sex <- as.numeric(heart_df$Sex == "Male")
heart_df$fbs <- as.numeric(heart_df$fbs == "Yes")
# Cargar paquetes
library(ggplot2)
library(dplyr)
library(minpack.lm)
# Simulación de datos
set.seed(123)
n <- 500
# Variables numéricas simuladas
age <- round(rnorm(n, mean = 54, sd = 9))
sex <- rbinom(n, 1, 0.7)
rest_bp <- round(rnorm(n, mean = 130, sd = 15))
chol <- round(rnorm(n, mean = 245, sd = 50))
fbs <- rbinom(n, 1, 0.15)
restecg <- sample(0:2, n, replace = TRUE, prob = c(0.5, 0.4, 0.1))
max_hr <- round(rnorm(n, mean = 150, sd = 22))
exang <- rbinom(n, 1, 0.3)
oldpeak <- round(runif(n, min = 0.0, max = 6.2), 1)
slope <- sample(1:3, n, replace = TRUE, prob = c(0.45, 0.4, 0.15))
ca <- sample(0:4, n, replace = TRUE, prob = c(0.6, 0.2, 0.1, 0.07, 0.03))
chest_pain <- sample(c("typical", "asymptomatic", "nonanginal", "nontypical"),
n, replace = TRUE, prob = c(0.25, 0.35, 0.25, 0.15))
thal <- sample(c("normal", "fixed", "reversable"),
n, replace = TRUE, prob = c(0.6, 0.2, 0.2))
# Modelo logit ficticio
logit_p <- -6 + 0.06*age + 0.02*chol + 0.03*rest_bp + 0.5*sex - 0.02*max_hr +
0.4*fbs + 0.3*exang + 0.7*ca + 0.3*(slope == 2) - 0.5*(thal == "normal")
p_hd <- 1 / (1 + exp(-logit_p))
ahd <- factor(rbinom(n, 1, prob = p_hd), levels = c(0, 1), labels = c("No", "Yes"))
# Base de datos simulada
heart_df <- data.frame(
Age = age, Sex = sex, ChestPain = chest_pain,
RestBP = rest_bp, Chol = chol, Fbs = fbs,
RestECG = restecg, MaxHR = max_hr, ExAng = exang,
Oldpeak = oldpeak, Slope = slope, Ca = ca, Thal = thal, AHD = ahd
)
# Ajuste de modelos logit y probit
modelo_logit <- glm(AHD ~ Age + Sex + Chol + ExAng + Ca + Thal, data = heart_df, family = binomial("logit"))
modelo_probit <- glm(AHD ~ Age + Sex + Chol + ExAng + Ca + Thal, data = heart_df, family = binomial("probit"))
# Predicción sobre valores controlados
x_grid <- seq(min(heart_df$Age), max(heart_df$Age), length.out = 100)
pred_data <- data.frame(
Age = x_grid,
Sex = 1,
Chol = 200,
ExAng = 1,
Ca = 2,
Thal = factor("reversable", levels = levels(heart_df$Thal))
)
# Probabilidades
p_logit <- predict(modelo_logit, newdata = pred_data, type = "response")
p_probit <- predict(modelo_probit, newdata = pred_data, type = "response")
# Gráfico comparativo
plot(x_grid, p_logit, type = "l", col = "blue", ylim = c(0, 1), lwd = 2,
ylab = "Probabilidad", xlab = "Edad", main = "Logit vs Probit")
lines(x_grid, p_probit, col = "red", lwd = 2, lty = 2)
legend("bottomright", legend = c("Logit", "Probit"),
col = c("blue", "red"), lty = c(1, 2), lwd = 2)
# Cargar paquetes
library(ggplot2)
library(dplyr)
library(minpack.lm)
# Simulación de datos
set.seed(123)
n <- 500
# Variables numéricas simuladas
age <- round(rnorm(n, mean = 54, sd = 9))
sex <- rbinom(n, 1, 0.7)
rest_bp <- round(rnorm(n, mean = 130, sd = 15))
chol <- round(rnorm(n, mean = 245, sd = 50))
fbs <- rbinom(n, 1, 0.15)
restecg <- sample(0:2, n, replace = TRUE, prob = c(0.5, 0.4, 0.1))
max_hr <- round(rnorm(n, mean = 150, sd = 22))
exang <- rbinom(n, 1, 0.3)
oldpeak <- round(runif(n, min = 0.0, max = 6.2), 1)
slope <- sample(1:3, n, replace = TRUE, prob = c(0.45, 0.4, 0.15))
ca <- sample(0:4, n, replace = TRUE, prob = c(0.6, 0.2, 0.1, 0.07, 0.03))
chest_pain <- sample(c("typical", "asymptomatic", "nonanginal", "nontypical"),
n, replace = TRUE, prob = c(0.25, 0.35, 0.25, 0.15))
thal <- sample(c("normal", "fixed", "reversable"),
n, replace = TRUE, prob = c(0.6, 0.2, 0.2))
# Modelo logit ficticio
logit_p <- -6 + 0.06*age + 0.02*chol + 0.03*rest_bp + 0.5*sex - 0.02*max_hr +
0.4*fbs + 0.3*exang + 0.7*ca + 0.3*(slope == 2) - 0.5*(thal == "normal")
p_hd <- 1 / (1 + exp(-logit_p))
ahd <- factor(rbinom(n, 1, prob = p_hd), levels = c(0, 1), labels = c("No", "Yes"))
# Base de datos simulada
heart_df <- data.frame(
Age = age, Sex = sex, ChestPain = chest_pain,
RestBP = rest_bp, Chol = chol, Fbs = fbs,
RestECG = restecg, MaxHR = max_hr, ExAng = exang,
Oldpeak = oldpeak, Slope = slope, Ca = ca, Thal = thal, AHD = ahd
)
# Ajuste de modelos logit y probit
modelo_logit <- glm(AHD ~ Age + Sex + Chol + ExAng + Ca + Thal, data = heart_df, family = binomial("logit"))
modelo_probit <- glm(AHD ~ Age + Sex + Chol + ExAng + Ca + Thal, data = heart_df, family = binomial("probit"))
# Predicción sobre valores controlados
x_grid <- seq(min(heart_df$Age), max(heart_df$Age), length.out = 100)
pred_data <- data.frame(
Age = x_grid,
Sex = 1,
Chol = 200,
ExAng = 1,
Ca = 2,
Thal = factor("reversable", levels = levels(heart_df$Thal))
)
# Probabilidades
p_logit <- predict(modelo_logit, newdata = pred_data, type = "response")
p_probit <- predict(modelo_probit, newdata = pred_data, type = "response")
# Gráfico comparativo
plot(x_grid, p_logit, type = "l", col = "blue", ylim = c(0, 1), lwd = 2,
ylab = "Probabilidad", xlab = "Edad", main = "Logit vs Probit")
lines(x_grid, p_probit, col = "red", lwd = 2, lty = 2)
legend("bottomright", legend = c("Logit", "Probit"),
col = c("blue", "red"), lty = c(1, 2), lwd = 2)
# Cargar paquetes
library(ggplot2)
library(dplyr)
library(minpack.lm)
# Simulación de datos
set.seed(123)
n <- 500
# Variables numéricas simuladas
age <- round(rnorm(n, mean = 54, sd = 9))
sex <- rbinom(n, 1, 0.7)
rest_bp <- round(rnorm(n, mean = 130, sd = 15))
chol <- round(rnorm(n, mean = 245, sd = 50))
fbs <- rbinom(n, 1, 0.15)
restecg <- sample(0:2, n, replace = TRUE, prob = c(0.5, 0.4, 0.1))
max_hr <- round(rnorm(n, mean = 150, sd = 22))
exang <- rbinom(n, 1, 0.3)
oldpeak <- round(runif(n, min = 0.0, max = 6.2), 1)
slope <- sample(1:3, n, replace = TRUE, prob = c(0.45, 0.4, 0.15))
ca <- sample(0:4, n, replace = TRUE, prob = c(0.6, 0.2, 0.1, 0.07, 0.03))
chest_pain <- sample(c("typical", "asymptomatic", "nonanginal", "nontypical"),
n, replace = TRUE, prob = c(0.25, 0.35, 0.25, 0.15))
thal <- sample(c("normal", "fixed", "reversable"),
n, replace = TRUE, prob = c(0.6, 0.2, 0.2))
# Modelo logit ficticio
logit_p <- -6 + 0.06*age + 0.02*chol + 0.03*rest_bp + 0.5*sex - 0.02*max_hr +
0.4*fbs + 0.3*exang + 0.7*ca + 0.3*(slope == 2) - 0.5*(thal == "normal")
p_hd <- 1 / (1 + exp(-logit_p))
ahd <- factor(rbinom(n, 1, prob = p_hd), levels = c(0, 1), labels = c("No", "Yes"))
# Base de datos simulada
heart_df <- data.frame(
Age = age, Sex = sex, ChestPain = chest_pain,
RestBP = rest_bp, Chol = chol, Fbs = fbs,
RestECG = restecg, MaxHR = max_hr, ExAng = exang,
Oldpeak = oldpeak, Slope = slope, Ca = ca, Thal = thal, AHD = ahd
)
# Ajuste de modelos logit y probit
modelo_logit <- glm(AHD ~ Age + Sex + Chol + ExAng + Ca + Thal, data = heart_df, family = binomial("logit"))
modelo_probit <- glm(AHD ~ Age + Sex + Chol + ExAng + Ca + Thal, data = heart_df, family = binomial("probit"))
# Predicción sobre valores controlados
x_grid <- seq(min(heart_df$Age), max(heart_df$Age), length.out = 100)
pred_data <- data.frame(
Age = x_grid,
Sex = 1,
Chol = 200,
ExAng = 1,
Ca = 2,
Thal = factor("reversable", levels = levels(heart_df$Thal))
)
# Probabilidades
p_logit <- predict(modelo_logit, newdata = pred_data, type = "response")
p_probit <- predict(modelo_probit, newdata = pred_data, type = "response")
# Gráfico comparativo
plot(x_grid, p_logit, type = "l", col = "blue", ylim = c(0, 1), lwd = 2,
ylab = "Probabilidad", xlab = "Edad", main = "Logit vs Probit")
lines(x_grid, p_probit, col = "red", lwd = 2, lty = 2)
legend("bottomright", legend = c("Logit", "Probit"),
col = c("blue", "red"), lty = c(1, 2), lwd = 2)
# Cargar paquetes
library(ggplot2)
library(dplyr)
library(minpack.lm)
# Simulación de datos
set.seed(123)
n <- 500
# Variables numéricas simuladas
age <- round(rnorm(n, mean = 54, sd = 9))
sex <- rbinom(n, 1, 0.7)
rest_bp <- round(rnorm(n, mean = 130, sd = 15))
chol <- round(rnorm(n, mean = 245, sd = 50))
fbs <- rbinom(n, 1, 0.15)
restecg <- sample(0:2, n, replace = TRUE, prob = c(0.5, 0.4, 0.1))
max_hr <- round(rnorm(n, mean = 150, sd = 22))
exang <- rbinom(n, 1, 0.3)
oldpeak <- round(runif(n, min = 0.0, max = 6.2), 1)
slope <- sample(1:3, n, replace = TRUE, prob = c(0.45, 0.4, 0.15))
ca <- sample(0:4, n, replace = TRUE, prob = c(0.6, 0.2, 0.1, 0.07, 0.03))
chest_pain <- sample(c("typical", "asymptomatic", "nonanginal", "nontypical"),
n, replace = TRUE, prob = c(0.25, 0.35, 0.25, 0.15))
thal <- sample(c("normal", "fixed", "reversable"),
n, replace = TRUE, prob = c(0.6, 0.2, 0.2))
# Modelo logit ficticio
logit_p <- -6 + 0.06*age + 0.02*chol + 0.03*rest_bp + 0.5*sex - 0.02*max_hr +
0.4*fbs + 0.3*exang + 0.7*ca + 0.3*(slope == 2) - 0.5*(thal == "normal")
p_hd <- 1 / (1 + exp(-logit_p))
ahd <- factor(rbinom(n, 1, prob = p_hd), levels = c(0, 1), labels = c("No", "Yes"))
# Base de datos simulada
heart_df <- data.frame(
Age = age, Sex = sex, ChestPain = chest_pain,
RestBP = rest_bp, Chol = chol, Fbs = fbs,
RestECG = restecg, MaxHR = max_hr, ExAng = exang,
Oldpeak = oldpeak, Slope = slope, Ca = ca, Thal = thal, AHD = ahd
)
# Ajuste de modelos logit y probit
modelo_logit <- glm(AHD ~ Age + Sex + Chol + ExAng + Ca + Thal, data = heart_df, family = binomial("logit"))
modelo_probit <- glm(AHD ~ Age + Sex + Chol + ExAng + Ca + Thal, data = heart_df, family = binomial("probit"))
# Predicción sobre valores controlados
x_grid <- seq(min(heart_df$Age), max(heart_df$Age), length.out = 100)
pred_data <- data.frame(
Age = x_grid,
Sex = 1,
Chol = 200,
ExAng = 1,
Ca = 2,
Thal = factor("reversable", levels = levels(heart_df$Thal))
)
# Probabilidades
p_logit <- predict(modelo_logit, newdata = pred_data, type = "response")
p_probit <- predict(modelo_probit, newdata = pred_data, type = "response")
# Gráfico comparativo
plot(x_grid, p_logit, type = "l", col = "blue", ylim = c(0, 1), lwd = 2,
ylab = "Probabilidad", xlab = "Edad", main = "Logit vs Probit")
lines(x_grid, p_probit, col = "red", lwd = 2, lty = 2)
legend("bottomright", legend = c("Logit", "Probit"),
col = c("blue", "red"), lty = c(1, 2), lwd = 2)
# Cargar paquetes
library(ggplot2)
library(dplyr)
library(minpack.lm)
# Simulación de datos
set.seed(123)
n <- 500
# Variables numéricas simuladas
age <- round(rnorm(n, mean = 54, sd = 9))
sex <- rbinom(n, 1, 0.7)
rest_bp <- round(rnorm(n, mean = 130, sd = 15))
chol <- round(rnorm(n, mean = 245, sd = 50))
fbs <- rbinom(n, 1, 0.15)
restecg <- sample(0:2, n, replace = TRUE, prob = c(0.5, 0.4, 0.1))
max_hr <- round(rnorm(n, mean = 150, sd = 22))
exang <- rbinom(n, 1, 0.3)
oldpeak <- round(runif(n, min = 0.0, max = 6.2), 1)
slope <- sample(1:3, n, replace = TRUE, prob = c(0.45, 0.4, 0.15))
ca <- sample(0:4, n, replace = TRUE, prob = c(0.6, 0.2, 0.1, 0.07, 0.03))
chest_pain <- sample(c("typical", "asymptomatic", "nonanginal", "nontypical"),
n, replace = TRUE, prob = c(0.25, 0.35, 0.25, 0.15))
thal <- sample(c("normal", "fixed", "reversable"),
n, replace = TRUE, prob = c(0.6, 0.2, 0.2))
# Modelo logit ficticio
logit_p <- -6 + 0.06*age + 0.02*chol + 0.03*rest_bp + 0.5*sex - 0.02*max_hr +
0.4*fbs + 0.3*exang + 0.7*ca + 0.3*(slope == 2) - 0.5*(thal == "normal")
p_hd <- 1 / (1 + exp(-logit_p))
ahd <- factor(rbinom(n, 1, prob = p_hd), levels = c(0, 1), labels = c("No", "Yes"))
# Base de datos simulada
heart_df <- data.frame(
Age = age, Sex = sex, ChestPain = chest_pain,
RestBP = rest_bp, Chol = chol, Fbs = fbs,
RestECG = restecg, MaxHR = max_hr, ExAng = exang,
Oldpeak = oldpeak, Slope = slope, Ca = ca, Thal = thal, AHD = ahd
)
# Ajuste de modelos logit y probit
modelo_logit <- glm(AHD ~ Age + Sex + Chol + ExAng + Ca + Thal, data = heart_df, family = binomial("logit"))
modelo_probit <- glm(AHD ~ Age + Sex + Chol + ExAng + Ca + Thal, data = heart_df, family = binomial("probit"))
# Predicción sobre valores controlados
x_grid <- seq(min(heart_df$Age), max(heart_df$Age), length.out = 100)
pred_data <- data.frame(
Age = x_grid,
Sex = 0,
Chol = 180,
ExAng = 0,
Ca = 0,
Thal = factor("reversable", levels = levels(heart_df$Thal))
)
# Probabilidades
p_logit <- predict(modelo_logit, newdata = pred_data, type = "response")
p_probit <- predict(modelo_probit, newdata = pred_data, type = "response")
# Gráfico comparativo
plot(x_grid, p_logit, type = "l", col = "blue", ylim = c(0, 1), lwd = 2,
ylab = "Probabilidad", xlab = "Edad", main = "Logit vs Probit")
lines(x_grid, p_probit, col = "red", lwd = 2, lty = 2)
legend("bottomright", legend = c("Logit", "Probit"),
col = c("blue", "red"), lty = c(1, 2), lwd = 2)
Exito <- 210
Total <- 250;
pgorro <- Exito/Total
pgorro
probs <- rbinom(500,250,pgorro)
probs
knitr::opts_chunk$set(echo = TRUE)
odds_women <- p_women/(1-p_women)
n_women <- 1000
n_men <- 1000
p_women <- 0.6108
p_men <- 0.4398
instagram_women <- rbinom(n_women, 1, p_women)
instagram_men <- rbinom(n_men, 1, p_men)
sexo <- c(rep("Mujer", n_women), rep("Hombre", n_men))
instagram <- c(instagram_women, instagram_men)
datos <- data.frame(
sexo = factor(sexo, levels = c("Hombre", "Mujer")),
instagram = instagram
)
datos
head(datos)
odds_women <- p_women/(1-p_women)
odds_women <- p_women/(1-p_women); print(odds_women)
odds_men <- p_men/(1-p_men); print(odds_men)
modelo_base <- glm(cbind(insects_killed, insects_alive) ~ concentration,
family = binomial, data = original)
original <- data.frame(
concentration = c(0.96, 1.33, 1.63, 2.04, 2.32),
insects_total = c(50, 48, 46, 49, 50),
insects_killed = c(6, 16, 24, 42, 44)
)
original$insects_alive <- original$insects_total - original$insects_killed
# Modelo base
modelo_base <- glm(cbind(insects_killed, insects_alive) ~ concentration,
family = binomial, data = original)
modelo_base
set.seed(42)
sim_conc <- sort(runif(150, min = 0.9, max = 2.4))
predicted_logit <- predict(modelo_base, newdata = data.frame(concentration = sim_conc))
predicted_prob <- exp(predicted_logit) / (1 + exp(predicted_logit))
predicted_logit
predicted_prob
sim_data <- data.frame(
concentration = sim_conc,
insects_total = 50,
prob_killed = predicted_prob
)
sim_data
sim_data$insects_killed <- rbinom(150, size = sim_data$insects_total, prob = sim_data$prob_killed)
sim_data$insects_alive <- sim_data$insects_total - sim_data$insects_killed
sim_data$insects_killed
insects_alive
sim_data
sim_data$insects_alive
modelo_sim <- glm(cbind(insects_killed, insects_alive) ~ concentration,
family = binomial, data = sim_data)
modelo_sim
set.seed(123)
# Número de pacientes
n <- 1300
patient_number <- 1:n
age <- round(runif(n, min = 20, max = 80))  # edades entre 20 y 80 años
tumor_size <- round(rnorm(n, mean = 2.5, sd = 1.0), 1)  # tamaño tumoral en cm
marker_A <- round(rnorm(n, mean = 1.0, sd = 0.3), 1)  # marcador A
marker_B <- round(rnorm(n, mean = 1.2, sd = 0.4), 1)  # marcador B
logit <- -5 + 0.04 * age + 0.8 * tumor_size + 1.2 * marker_B - 0.5 * marker_A
prob <- 1 / (1 + exp(-logit))
cancer_type <- rbinom(n, 1, prob)
logit
prob <- 1 / (1 + exp(-logit))
cancer_type <- rbinom(n, 1, prob)
datos_simulados <- data.frame(
PatientNumber = patient_number,
Age = age,
TumorSize_cm = tumor_size,
MarkerA = marker_A,
MarkerB = marker_B,
CancerType = cancer_type
)
head(datos_simulados)
set.seed(777)
n <- 1300
# Variables independientes
age <- round(runif(n, 20, 80))  # edad entre 20 y 80 años
tumor_size <- round(rnorm(n, 2.5, 1), 1)  # tumor size con media 2.5 cm
marker_A <- round(rnorm(n, 1.0, 0.3), 1)  # marcador A
marker_B <- round(rnorm(n, 1.2, 0.4), 1)  # marcador B
log_odds <- -3.126 + 0.032 * age + 0.732 * tumor_size + 1.348 * marker_A + 0.898 * marker_B
prob <- 1 / (1 + exp(-log_odds))
cancer_type <- rbinom(n, 1, prob)
# Data frame final
datos_cancer <- data.frame(
PatientNumber = 1:n,
Age = age,
TumorSize_cm = tumor_size,
MarkerA = marker_A,
MarkerB = marker_B,
CancerType = cancer_type
)
# Visualizar los primeros renglones
head(datos_cancer)
library(dplyr)
library(broom)
set.seed(777)
n <- 1300
age <- round(runif(n, 20, 80))
tumor_size <- round(rnorm(n, 2.5, 1), 1)
marker_A <- round(rnorm(n, 1.0, 0.3), 1)
marker_B <- round(rnorm(n, 1.2, 0.4), 1)
log_odds <- -3.126 + 0.032 * age + 0.732 * tumor_size + 1.348 * marker_A + 0.898 * marker_B
prob <- 1 / (1 + exp(-log_odds))
cancer_type <- rbinom(n, 1, prob)
df <- data.frame(
Age = age,
TumorSize = tumor_size,
MarkerA = marker_A,
MarkerB = marker_B,
CancerType = cancer_type
)
modelo <- glm(CancerType ~ Age + TumorSize + MarkerA + MarkerB, data = df, family = binomial)
# Resumen del modelo
summary(modelo)
summary(modelo)
set.seed(123)
n <- 1000
edad <- round(rnorm(n, mean = 55, sd = 10)) # Edad al diagnóstico
tamano_tumor <- round(rnorm(n, mean = 30, sd = 10), 1) # en mm
progesterona <- round(rnorm(n, mean = 15, sd = 5), 1) # niveles en ng/ml
log_odds <- -4 + 0.03 * edad + 0.05 * tamano_tumor - 0.1 * progesterona
log_odds
prob_sobrevida <- 1 / (1 + exp(-log_odds)) # se calcula la sigmoide
prob_sobrevida
prob_sobrevivir <- 1 / (1 + exp(-log_odds)) # se calcula la sigmoide
sobrevivio <- rbinom(n, 1, prob_sobrevivir)
sobrevivio
setwd("~/Documents/GitHub/DeepLearningReview/0-Notes/DataSets")
write.csv(datos_cancer, "datos_cancer_simulados.csv", row.names = FALSE)
datos_cancer <- data.frame(
edad = edad,
tamano_tumor = tamano_tumor,
progesterona = progesterona,
sobrevivio = sobrevivio
)
write.csv(datos_cancer, "datos_cancer_simulados.csv", row.names = FALSE)
View(datos_cancer)
print(log_odds)
head(datos_cancer)
edad <- round(runif(n, 35, 80))                      # Edad entre 35 y 80
psistolica <- round(rnorm(n, 130, 20))               # Presión sistólica
colesterol <- round(rnorm(n, 200, 40))               # Colesterol total
diabetes <- rbinom(n, 1, 0.2)                        # Presencia de diabetes (20%)
obesidad <- rbinom(n, 1, 0.3)                        # Obesidad (30%)
tabaco <- rbinom(n, 1, 0.25)                         # Fumador (25%)
beta_0 <- -6;      beta_edad <- 0.04; beta_psis <- 0.02;
beta_col <- 0.01;  beta_diab <- 0.7;  beta_obes <- 0.5; beta_taba <- 0.6;
lineal_predictor <- beta_0 + beta_edad * edad + beta_psis * psistolica +
beta_col * colesterol + beta_diab * diabetes +
beta_obes * obesidad + beta_taba * tabaco
log_odds <- beta_0 + beta_edad * edad + beta_psis * psistolica +
beta_col * colesterol + beta_diab * diabetes +
beta_obes * obesidad + beta_taba * tabaco
CHD <- rbinom(n, 1, prob_chd)
prob_chd <- 1 / (1 + exp(-log_odds))
CHD <- rbinom(n, 1, prob_chd)
datos_chd <- data.frame(
edad, psistolica, colesterol, diabetes, obesidad, tabaco, CHD
)
View(datos_chd)
write.csv(datos_chd, "datos_simulados_CHD.csv", row.names = FALSE)
head(datos_chd)
edad <- round(rnorm(n, mean = 55, sd = 10))                        # Edad en años
bmi  <- round(rnorm(n, mean = 27, sd = 4), 1)                      # Índice de Masa Corporal
menopausia   <- sample(c("Pre", "Post"), n, replace = TRUE, prob = c(0.4, 0.6)) # Estado menopáusico
menopausia_post <- ifelse(menopausia == "Post", 1, 0)
tamano_tumor <- round(rnorm(n, mean = 25, sd = 10), 1)                # Tamaño del tumor (mm)
er_status    <- sample(c(0,1), n, replace = TRUE, prob = c(0.3, 0.7)) # Receptor de estrógeno
pr_status    <- sample(c(0,1), n, replace = TRUE, prob = c(0.4, 0.6)) # Receptor de progesterona
her2_status  <- sample(c(0,1), n, replace = TRUE, prob = c(0.8, 0.2)) # HER2
brca1_mut    <- sample(c(0,1), n, replace = TRUE, prob = c(0.95, 0.05)) # Mutación BRCA1
ki67         <- round(runif(n, min = 5, max = 60), 1)                   # Índice Ki-67 (%)
quimio       <- rbinom(n, 1, prob = 0.5)                                # Quimioterapia
hormonoterapia    <- rbinom(n, 1, prob = 0.6)                           # Hormonoterapia
grado_histologico <- sample(1:3, n, replace = TRUE, prob = c(0.3, 0.4, 0.3))  # Grado histológico
##---- GENERACION DEL MODELO ----
###---- MODELO LOGIT----
lp <- -3.5 +
0.04 * (edad - 50) +
0.02 * (bmi - 25) +             # efecto leve del IMC
0.5  * menopausia_post +       # efecto positivo para postmenopáusicas
0.03 * (tamano_tumor - 20) +
0.3  * er_status -             # efecto protector por receptor de estrógeno
0.4  * pr_status +
0.8  * her2_status +
1.2  * brca1_mut -
0.05 * ki67 +
0.6  * quimio +                  # quimioterapia reduce riesgo de recidiva
0.5  * hormonoterapia -
0.1 * (grado_histologico - 1)
prob_recidiva <- 1 / (1 + exp(-lp))
recidiva <- rbinom(n, 1, prob = prob_recidiva)
datos_cancer <- data.frame(
Edad = edad,
IMC = bmi,
Menopausia = menopausia,
Tamano_Tumor = tamano_tumor,
Grado = grado_histologico,
ER = er_status,
PR = pr_status,
HER2 = her2_status,
BRCA1 = brca1_mut,
Ki67 = ki67,
Quimio = quimio,
Hormonoterapia = hormonoterapia,
Recidiva = recidiva
)
View(datos_cancer)
head(datos_cancer)
